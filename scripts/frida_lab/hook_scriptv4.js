setTimeout(function() {
    function rpad(width, string, padding) { 
        return (width <= string.length) ? string : rpad(width, padding + string, padding)
    }
    
    function genPin(pin) {
        return rpad(6, pin.toString(), '0')        
    }
    
    Java.perform(function () {
        var class_name = "com.hackerone.mobile.challenge2.MainActivity";
        var nonce = Java.array('byte',[97, 97, 98, 98, 99, 99, 100, 100, 101, 101, 102, 102, 103, 103, 104, 104, 97, 97, 98, 98, 99, 99, 100, 100]);
        var cipherText = Java.array('byte',[150, 70, 209, 62, 200, 248, 97, 125, 28, 234, 28, 244, 51, 73, 64, 130, 76, 112, 10, 223, 106, 122, 50, 54, 22, 60, 162, 201, 96, 75, 155, 228, 189, 231, 112, 173, 105, 140, 2, 7, 15, 87, 26, 11, 97, 43, 189, 53, 114, 216, 31, 153]);
        const secretBoxClass = Java.use("org.libsodium.jni.crypto.SecretBox");
        var checkPin = false;
        console.log("Hooking class: " + class_name);
        console.log(nonce + " " + cipherText)
        Java.choose("com.hackerone.mobile.challenge2.MainActivity", {
            "onMatch": function (instance) {
                console.log("Found instance: " + instance);
                var counter = 0;
                for (var i = 923000; i >= 0; i--) {
                    var pin = genPin(i.toString());
                    var key = instance.getKey(pin);
                    try {
                        var msg = secretBoxClass.$new(key).decrypt(nonce, cipherText);
                        checkPin = true;
                    } catch (error) {
                        console.log("Failed pin: " + pin +  ", get key: " + instance.bytesToHex(key));

                    }
                    finally {
                        if (checkPin === true) {
                            console.log("Found pin: " + pin);
                            break;
                        }
                    }
                    counter++;
                    if (counter == 50) {
                        instance.resetCoolDown();
                        counter = 0;
                    }
                }
            },
            "onComplete": function () { 
                console.log("Done!");
            }
        });
    });
    
    
}, 0);